<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>github多账号</title>
      <link href="/2021/12/26/github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/"/>
      <url>/2021/12/26/github%E5%A4%9A%E8%B4%A6%E5%8F%B7%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="电脑关联多个github账号"><a href="#电脑关联多个github账号" class="headerlink" title="电脑关联多个github账号"></a>电脑关联多个github账号</h2><p>为了不必要换github账号时，老是重新设置ssh连接github。</p><h2 id="使用git-bash生成ssh公钥文件"><a href="#使用git-bash生成ssh公钥文件" class="headerlink" title="使用git bash生成ssh公钥文件"></a>使用git bash生成ssh公钥文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &#x27;xxxxx@qq.com&#x27;</span><br><span class="line">要按三下回车</span><br><span class="line">第一次输入文件名</span><br><span class="line">第二次是输入密码，无密码直接回车</span><br><span class="line">第三次是确认密码，无密码直接回车</span><br></pre></td></tr></table></figure><p>windws上文件是保存在C:\Users\用户名.ssh</p><h2 id="生成两对密钥后"><a href="#生成两对密钥后" class="headerlink" title="生成两对密钥后"></a>生成两对密钥后</h2><p>在C:\Users\用户名.ssh下新建config文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 1024</span><br><span class="line">Host 1024tiangithub</span><br><span class="line">HostName github.com</span><br><span class="line">User 1024tian</span><br><span class="line">IdentityFile C:\Users\用户名\.ssh\id_rsa_1024</span><br><span class="line"></span><br><span class="line"># 487</span><br><span class="line">Host 1024prophetgithub</span><br><span class="line">HostName github.com</span><br><span class="line">User 1024prophet</span><br><span class="line">IdentityFile C:\Users\用户名\.ssh\id_rsa_487</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>User 用户名，没啥用，就是让你知道这个配置是谁的<br>以后克隆别的仓库要使用 本地主机名（Host），因为在本地，Host会解析成github.com<br>就比如测试git连接github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@1024tiangithub</span><br><span class="line">ssh -T git@1024prophetgithub</span><br></pre></td></tr></table></figure><p>1024tiangithub会解释成github.com<br>1024prophetgithub会解释成github.com</p><p>克隆仓库方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@1024tiangithub:pwndbg/pwndbg.git</span><br></pre></td></tr></table></figure><p>当然这只是使用ssh克隆仓库要这样改</p><p>如果是使用https方式克隆仓库，随便，不需要这样改</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网络模拟器配置注意</title>
      <link href="/2021/12/26/%E7%BD%91%E7%BB%9C%E6%A8%A1%E6%8B%9F%E5%99%A8%E9%85%8D%E7%BD%AE%E6%B3%A8%E6%84%8F/"/>
      <url>/2021/12/26/%E7%BD%91%E7%BB%9C%E6%A8%A1%E6%8B%9F%E5%99%A8%E9%85%8D%E7%BD%AE%E6%B3%A8%E6%84%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="思科设备："><a href="#思科设备：" class="headerlink" title="思科设备："></a>思科设备：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">关闭域名解析： no ip domain lookup  </span><br><span class="line">也可以使用crtl+shfit+6</span><br><span class="line"></span><br><span class="line">配置控制台永不超时：</span><br><span class="line">    line console 0</span><br><span class="line">    exec-timeout 0 0</span><br><span class="line">  </span><br><span class="line">防止打断命令输入：</span><br><span class="line">    line console 0</span><br><span class="line">    logging synchronous</span><br></pre></td></tr></table></figure><h2 id="ensp设备："><a href="#ensp设备：" class="headerlink" title="ensp设备："></a>ensp设备：</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打断命令输入：</span><br><span class="line">    undo info-center enable        关闭信息提示，显示设备不要这么做</span><br><span class="line">    undo terminal monitor        关闭控制台显示，也会无法记录log,现实设备不要这么做</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 小技巧 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 小技巧 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stp</title>
      <link href="/2021/12/23/stp/"/>
      <url>/2021/12/23/stp/</url>
      
        <content type="html"><![CDATA[<h2 id="STP，生成树协议-IEEE-802-1d-STP"><a href="#STP，生成树协议-IEEE-802-1d-STP" class="headerlink" title="STP，生成树协议,IEEE 802.1d STP"></a>STP，生成树协议,IEEE 802.1d STP</h2><p>Spanning-Tree-Protocol</p><p>第二层网络环路会带来以下问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">广播风暴</span><br><span class="line">多帧复制</span><br><span class="line">MAC地址表的不稳定</span><br></pre></td></tr></table></figure><p>为了解决环路问题，又要保证网络的稳定性和健壮性，产生了STP</p><h3 id="STP三种端口类型"><a href="#STP三种端口类型" class="headerlink" title="STP三种端口类型"></a>STP三种端口类型</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">根端口 RP（root port）</span><br><span class="line">指定端口 DP（designated port）</span><br><span class="line">阻塞端口 AP（alter port）</span><br></pre></td></tr></table></figure><h3 id="每个广播域选择一个根桥"><a href="#每个广播域选择一个根桥" class="headerlink" title="每个广播域选择一个根桥"></a>每个广播域选择一个根桥</h3><h2 id="STP选举"><a href="#STP选举" class="headerlink" title="STP选举"></a>STP选举</h2><h3 id="第一步：选根桥"><a href="#第一步：选根桥" class="headerlink" title="第一步：选根桥"></a>第一步：选根桥</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">所有交换机比较BID（bridge id）</span><br><span class="line">BID = 优先级+MAC地址</span><br><span class="line">优先级越小越优先，</span><br><span class="line">优先级相同，比较MAC地址，越小越优先</span><br><span class="line">除了根桥以外，其余都是非根桥</span><br></pre></td></tr></table></figure><h3 id="第二步：选举根端口RP"><a href="#第二步：选举根端口RP" class="headerlink" title="第二步：选举根端口RP"></a>第二步：选举根端口RP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">根端口：每个非根桥离根桥最近的端口</span><br><span class="line">每一个非根交换机有一个</span><br><span class="line">所有非根桥交换机的端口都参与选举</span><br><span class="line"></span><br><span class="line">比较每个端口到根桥的路径开销，开销越小的就是根端口</span><br><span class="line">如果开销都一样，比较端口对端交换机的BID，越小越优先</span><br><span class="line"></span><br><span class="line">如果BID一样，就比较PID</span><br><span class="line">PID = 端口优先级+端口号</span><br><span class="line">优先级越小越优先，优先级相同，端口号小的就是根端口</span><br></pre></td></tr></table></figure><h3 id="第三步：选举指定端口DP"><a href="#第三步：选举指定端口DP" class="headerlink" title="第三步：选举指定端口DP"></a>第三步：选举指定端口DP</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">根桥上所有端口都是指定端口</span><br><span class="line">每条链路，哪个端口到根桥开销最小，就是指定端口</span><br><span class="line">如果开销相同，比较端口所在交换机的BID，越小越优先</span><br></pre></td></tr></table></figure><p>剩下的就是阻塞端口AP</p><h2 id="五种端口状态"><a href="#五种端口状态" class="headerlink" title="五种端口状态"></a>五种端口状态</h2><table><thead><tr><th>端口状态</th><th>目的</th><th>说明</th></tr></thead><tbody><tr><td>Forwarding（转发）</td><td>接收或转发数据，接收并发送BPDU，开始地址学习</td><td>只有根端口或指定端口才能进入Forwarding状态。（15s）</td></tr><tr><td>Learning（学习）</td><td>不接收或转发数据，接收并发送BPDU，开始地址学习</td><td>过度状态，增加Learning状态防止临时环路。（15s）</td></tr><tr><td>Listening（监听）</td><td>确定端口角色，将选举出根桥、根端口和指定端口，不接收或转发数据，接收并发送BPDU，不进行地址学习</td><td>过度状态。（15s）</td></tr><tr><td>Blocking/Discarding（阻塞）</td><td>不接收或转发数据，接收但不发送BPDU，不进行地址学习</td><td>阻塞端口最终状态。(20s)</td></tr><tr><td>Disabled（禁用）</td><td>端口既不处理和转发BPDU报文，也不转发用户流量，啥也不是状态</td><td>端口状态为Down。（10s）</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 数据链路层协议 </category>
          
          <category> stp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> stp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ospf</title>
      <link href="/2021/12/22/ospf/"/>
      <url>/2021/12/22/ospf/</url>
      
        <content type="html"><![CDATA[<h2 id="OSPF是一个内部网关协议（IGP），用于单一自治系统"><a href="#OSPF是一个内部网关协议（IGP），用于单一自治系统" class="headerlink" title="OSPF是一个内部网关协议（IGP），用于单一自治系统"></a>OSPF是一个内部网关协议（IGP），用于单一自治系统</h2><h3 id="概念：链路状态路由选择协议，最短路径优先协议，协议号89"><a href="#概念：链路状态路由选择协议，最短路径优先协议，协议号89" class="headerlink" title="概念：链路状态路由选择协议，最短路径优先协议，协议号89"></a>概念：链路状态路由选择协议，最短路径优先协议，协议号89</h3><h3 id="Router-id选举："><a href="#Router-id选举：" class="headerlink" title="Router-id选举："></a>Router-id选举：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">无环回接口，物理接口ip地址最大的为Router-id</span><br><span class="line">有环回接口，环回接口ip地址最大的为Router-id</span><br></pre></td></tr></table></figure><h3 id="换Router-id"><a href="#换Router-id" class="headerlink" title="换Router-id"></a>换Router-id</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">router-id x.x.x.x</span><br><span class="line">clear ip ospf process</span><br></pre></td></tr></table></figure><h3 id="广播网络或NBMA类型的网络需要选举Dr-BDr"><a href="#广播网络或NBMA类型的网络需要选举Dr-BDr" class="headerlink" title="广播网络或NBMA类型的网络需要选举Dr/BDr"></a>广播网络或NBMA类型的网络需要选举Dr/BDr</h3><h3 id="Dr和BDr选举："><a href="#Dr和BDr选举：" class="headerlink" title="Dr和BDr选举："></a>Dr和BDr选举：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">！！！路由器接口的优先级</span><br><span class="line">先看优先级，优先级高的（大优先）是Dr</span><br><span class="line">优先级相同时，网段上Router-id最大的路由器被选举为Dr，第二大的被选举为BDr</span><br><span class="line">优先级为0，不参与Dr/BDr选举</span><br></pre></td></tr></table></figure><h3 id="OSPF组播地址"><a href="#OSPF组播地址" class="headerlink" title="OSPF组播地址"></a>OSPF组播地址</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">224.0.0.5--DRother</span><br><span class="line">224.0.0.6--Dr/BDr</span><br></pre></td></tr></table></figure><h3 id="有五种数据包类型："><a href="#有五种数据包类型：" class="headerlink" title="有五种数据包类型："></a>有五种数据包类型：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">​Hello建立邻居关系和维持邻居关系</span><br><span class="line"></span><br><span class="line">​DBD（DD报文）链路状态数据库描述</span><br><span class="line"></span><br><span class="line">​LSR链路状态请求</span><br><span class="line"></span><br><span class="line">​LSU链路状态更新</span><br><span class="line"></span><br><span class="line">​LSAck链路状态确认</span><br></pre></td></tr></table></figure><h3 id="有8种邻居状态："><a href="#有8种邻居状态：" class="headerlink" title="有8种邻居状态："></a>有8种邻居状态：</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">​down 没有收到任何ospf报文，只会发送Hello报文</span><br><span class="line"></span><br><span class="line">​Attempt此状态只在NBMA网络上存在，表示没有收到邻居的任何信息，但是已周期性的向邻居发送报文</span><br><span class="line"></span><br><span class="line">​Init 表示接收到了邻居的Hello报文，但是报文中没有我的信息（如router ID），（对方没有收到我发的Hello报文），开始发送Hello包</span><br><span class="line"></span><br><span class="line">​2way 邻接状态，双方互相收到Hello报文，在接收的hello包中包含了自己的路由ID，邻居关系才能init进入2way</span><br><span class="line"></span><br><span class="line">​Exstart 预启动状态，在多路访问环境（广播型、NBMA）需要选举DR和BDR，建立主从关系，选举成功后才能进入exstart状态</span><br><span class="line"></span><br><span class="line">​Exchange 路由器将本地的LSDB用DD报文来描述，并发送给邻居。在exstart状态中，点到点、点到多点网络类型中选择的master和slave，由master首先更新DBD</span><br><span class="line"></span><br><span class="line">​Loading路由器发送LSR报文向邻居请求对方的DD报文，就是交互DBD</span><br><span class="line"></span><br><span class="line">​FULL 链路状态数据库完全同步，本路由器和邻居建立了邻接状态，完全邻接</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络协议 </category>
          
          <category> ospf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ospf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/12/18/hello-world/"/>
      <url>/2021/12/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 分类1 </category>
          
          <category> 分类2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test1 </tag>
            
            <tag> test2 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
